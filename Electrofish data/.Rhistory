M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[1]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
DISTANCE<-L1$res[2]
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[2]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
visreg(M1, "DISTANCE", type="contrast")
rm(list=ls())
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
# mean effect size:
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$DISTANCE*regcoef[2]
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point()+
geom_line(aes(x=DISTANCE, y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size for EPT Density (lnR)")+
theme_bw()
print(plot1)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
DISTANCE<-L1$res[2]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[2]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
# it works
# to check:
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
visreg(M1, "DISTANCE", type="contrast")
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
Time..months.<-L1$res[1]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
#Linear regression on short distances
#Take out observations with a max distance of 3 km:
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Discharge..m3.s.", type="contrast")
L1$fit
y_fitted_line<-L1$fit[5]
y_fitted_line
L1$res
res_to_plot<-L1$res[5]
res_to_plot
Discharge..m3.s.<-L1$res[2]
Discharge..m3.s.
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Discharge..m3.s.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# method 2A) so try with regression line from partial coefficient as calculated before:
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,method="ML",data=downsub)
summary(M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Discharge..m3.s.*regcoef[3]
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(aes(x=Discharge..m3.s., y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
# no, it's still different form graphs given by visreg
#######FINAL GRAH:
##method 2B) if I plot the line from visreg
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Discharge..m3.s.", type="contrast")
L1$fitL1$fit
y_fitted_line<-L1$fit[5]
Discharge..m3.s.<-L1$fit[2]
data_line<-data.frame(cbind(Discharge..m3.s.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Discharge..m3.s., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
L1$fit
y_fitted_line<-L1$fit[5]
head(y_fitted_line)
head(L1$res)
res_to_plot<-L1$res[5]
res_to_plot
Time..months.<-L1$res[1]
head(Time..months.)
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
library(nlme)
library(car)
library(mgcv)
library(ggplot2)
library(visreg)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/BI_fam downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
summary(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
# mean effect size:
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
M0<-lme(lnR~Catchment...undisturbed , method="ML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~ 1, method="ML",random=~1|DAM.CODE, data=downsub)
anova(M0,M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
library(ggplot2)
install.packages("ggplots")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
#final:
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
#
# plot for not significant effects of time:
## plots for the not significant effect of time (just for graphical purpouses):
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
regcoef<-colMeans(coef(M1),)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
rm(list=ls())
upstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam uppstreams.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
reservoir <- read.table("/Users/serenadonadi/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam reservoir.txt" ,sep="\t",header=TRUE )
reservoir <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
# partial regression:
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
visreg2d(M0,x="Time..months.",y="Discharge..m3.s.",plot.type="persp")
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="persp")
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="image")
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="persp")
visreg(M0)
visreg(M0, "Time..months.", by="Discharge..m3.s.")
visreg(M0, "Time..months.", by="Catchment...undisturbed")
visreg(M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
# partial regression:
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
M2<-lm(lnR~Time..months.*Catchment...undisturbed , data=reservoir)
anova(M2,M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
M2<-lm(lnR~Time..months.*Discharge..m3.s. , data=reservoir)
anova(M2,M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="image")
rm(list=ls())
setwd("C:/Users/sedi0002/Google Drive/Dod ved/Electrofish data")
setwd("C:/Users/serena/Google Drive/Dod ved/Electrofish data")
my<-read.table("LWD_wholewidth_SD3.txt",header=T)
head(my)
str(my)
summary(my)
library(ggplot2)
library(lattice)
library(nlme)
library(MASS)
my$Catchment_number<-as.factor(my$Catchment_number)
my$Whole_width_fished<-as.factor(my$Whole_width_fished)
my$DateYYYYMMDD<-as.factor(my$DateYYYYMMDD)
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species
),list(my$River_name,my$Catchment_number,my$Yearmy$Year,),mean)
names(AV)<-c("River_name", "Catchment_number","Year",
"Altitude","Lat","Long","LWD","exaktarea","Wetted_width","Site_length","Site_area",
"Maxdepth","Av_depth","Water_temperature","Average_air_temperature","SUB1","Site_habitat_index",
"Velocity","Slope_percent","Distance_to_sea","Month","Julian_date","Abbor","BEcrOTOT","Elrit","GEdda",
"HarrTOT","Lake","LaxFIXTO","LaxOrtot","LaxTOT","Eel","MOrt","OringTOT","RegnbTOT","ROdinTOT","Cottus_spp",
"Lampetra","Sticklebacks","VIX","VIX_klass","Number_of_fish_species")
# Defining variables type: -----------------------------------------------------
# convert to categorical variables:my$DateYYYYMMDD<-as.factor(my$DateYYYYMMDD)
my$Catchment_number<-as.factor(my$Catchment_number)
my$Whole_width_fished<-as.factor(my$Whole_width_fished)
my$DateYYYYMMDD<-as.factor(my$DateYYYYMMDD)
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species
),list(my$River_name,my$Catchment_number,my$Yearmy$Year,),mean)
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species
),list(my$River_name,my$Catchment_number,my$Year,),mean)
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species
),list(my$River_name,my$Catchment_number,my$Year),mean)
names(AV)<-c("River_name", "Catchment_number","Year",
"Altitude","Lat","Long","LWD","exaktarea","Wetted_width","Site_length","Site_area",
"Maxdepth","Av_depth","Water_temperature","Average_air_temperature","SUB1","Site_habitat_index",
"Velocity","Slope_percent","Distance_to_sea","Month","Julian_date","Abbor","BEcrOTOT","Elrit","GEdda",
"HarrTOT","Lake","LaxFIXTO","LaxOrtot","LaxTOT","Eel","MOrt","OringTOT","RegnbTOT","ROdinTOT","Cottus_spp",
"Lampetra","Sticklebacks","VIX","VIX_klass","Number_of_fish_species")
head(AV)
AV$GEdda_KLASS <- ifelse(AV$GEdda > 0, c(1), c(0))
head(AV)
str(AV)
AV$OringTOT_KLASS <- ifelse(AV$OringTOT > 0, c(1), c(0))
AV$LaxTOT_KLASS <- ifelse(AV$LaxTOT > 0, c(1), c(0))
head(AV)
library(piecewiseSEM)
install.packages("piecewiseSEM")
library(piecewiseSEM)
dotchart(AV$OringTOT)
plot(AV$OringTOT~AV$LWD)
plot(AV$OringTOT_KLASS~AV$LWD)# more promising with binarian varirables indeed...
dotchart(AV$BEcrOTOT)
plot(AV$OringTOT_KLASS~AV$Site_length)
plot(AV$OringTOT_KLASS~AV$Site_area)
plot(AV$OringTOT_KLASS~AV$Water_temperature)
plot(AV$OringTOT~AV$Site_length)
plot(AV$OringTOT~AV$Site_area)
plot(AV$OringTOT~AV$Water_temperature)
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda)
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/10)
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/5)
plot(AV$OringTOT~AV$LWD)
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/5, ylim=c(0,150))
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/5, xlim=c(0,150))
plot(AV$OringTOT~AV$LWD)
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/5, xlim=c(0,150), ylim=c(0,1400))
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/2, xlim=c(0,150), ylim=c(0,1400))
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/3, xlim=c(0,150), ylim=c(0,1400))
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/4, xlim=c(0,150), ylim=c(0,1400))
plot(AV$OringTOT~AV$LWD, cex=AV$GEdda/4, xlim=c(0,150), ylim=c(0,350))
plot(AV$OringTOT_KLASS~AV$LWD)# more promising with binarian varirables indeed...
plot(AV$OringTOT_KLASS~AV$LWD,cex=AV$GEdda/4,)# more promising with binarian varirables indeed...
plot(AV$OringTOT_KLASS~AV$LWD,cex=AV$GEdda/4,xlim=c(0,150),)# more promising with binarian varirables indeed...
plot(AV$OringTOT_KLASS~AV$LWD,cex=AV$GEdda/4,xlim=c(0,50),)# more promising with binarian varirables indeed...
plot(AV$OringTOT~AV$Julian_date)
plot(AV$OringTOT_KLASS~AV$Julian_date)
plot(AV$OringTOT~AV$Month)
plot(AV$OringTOT_KLASS~AV$Month)
plot(AV$OringTOT~AV$Lat)
plot(AV$OringTOT_KLASS~AV$Lat)
plot(AV$OringTOT~AV$Altitude)
plot(AV$OringTOT_KLASS~AV$Altitude)
plot(AV$OringTOT~AV$Average_air_temperature)
plot(AV$OringTOT_KLASS~AV$Average_air_temperature)
plot(AV$Average_air_temperature~AV$OringTOT_KLASS)
plot(AV$OringTOT~AV$Distance_to_sea)
plot(AV$OringTOT_KLASS~AV$Distance_to_sea)
plot(AV$OringTOT~AV$Wetted_width)
plot(AV$OringTOT_KLASS~AV$Wetted_width)
plot(AV$OringTOT~AV$exaktarea)
plot(AV$OringTOT_KLASS~AV$exaktarea)
plot(AV$OringTOT~AV$Av_depth)
plot(AV$OringTOT_KLASS~AV$Av_depth)
plot(AV$OringTOT~AV$Maxdepth)
plot(AV$OringTOT_KLASS~AV$Maxdepth)
plot(AV$OringTOT~AV$Slope_percent)
plot(AV$OringTOT_KLASS~AV$Slope_percent)
plot(AV$OringTOT~AV$Velocity)
plot(AV$OringTOT_KLASS~AV$Velocity)
plot(AV$OringTOT~AV$SUB1)
plot(AV$OringTOT_KLASS~AV$SUB1)
plot(AV$OringTOT~AV$Substrate1)
head(AV)
plot(AV$OringTOT~AV$Yera)
plot(AV$OringTOT~AV$Year)
plot(AV$OringTOT_KLASS~AV$Year)
plot(AV$OringTOT~AV$GEdda)
plot(AV$OringTOT_KLASS~AV$GEdda)
plot(AV$OringTOT~AV$RegnbTOT)
plot(AV$OringTOT_KLASS~AV$RegnbTOT)
plot(AV$OringTOT~AV$Lampetra)
plot(AV$OringTOT_KLASS~AV$Lampetra)
plot(AV$OringTOT~AV$BEcrOTOT)
plot(AV$OringTOT_KLASS~AV$BEcrOTOT)
dotchart(AV$LWD)
plot(AV$LWD~AV$Site_length)
plot(AV$LWD~AV$Site_area) # ok, no sign of incxreased abundances for higher values of legnths or area
plot(AV$LWD~AV$Water_temperature) # hump shape
plot(AV$LWD~AV$Julian_date)
plot(AV$LWD~AV$Month)
plot(AV$LWD~AV$Year)
plot(AV$LWD~AV$Lat)
plot(AV$LWD~AV$Altitude)
plot(AV$LWD~AV$Average_air_temperature)
plot(AV$LWD~AV$Distance_to_sea)
plot(AV$LWD~AV$Year)
plot(AV$LWD~AV$Wetted_width)
plot(AV$LWD~AV$exaktarea)
plot(AV$LWD~AV$Av_depth)
plot(AV$LWD~AV$Slope_percent)
plot(AV$LWD~AV$Velocity)
plot(AV$OringTOT~AV$VIX)
