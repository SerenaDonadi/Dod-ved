geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2, size=2)+  ### or grey without transparency (remove alpha)
geom_point(size=2)+
geom_line(data=data_line, aes(x=Discharge..m3.s., y=y_fitted_line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge (m^3/s")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2, size=2)+  ### or grey without transparency (remove alpha)
geom_point(size=2)+
geom_line(data=data_line, aes(x=Discharge..m3.s., y=y_fitted_line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge (m^3/s)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
downstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
# mean effect size:
mean(downsub$lnR)
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$DISTANCE*regcoef[2]
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point()+
geom_line(aes(x=DISTANCE, y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size for EPT Density (lnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR), size=2)+
geom_point(size=2)+
geom_line(aes(x=DISTANCE, y=line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size for EPT Density (lnR)")+
theme_bw(base_size=17)
print(plot1)
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=DISTANCE, y=line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size for EPT Density (lnR)")+
theme_bw(base_size=17)
print(plot1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$DISTANCE*regcoef[2]
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=DISTANCE, y=line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
upstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density upstream.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=upsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
upsub$line<-regcoef[1]+upsub$Time..months.*regcoef[2]
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point()+
geom_line(aes(x=Time..months., y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Time..months., y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
upstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density upstreams.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
# mean effect size:
mean(upsub$lnR)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=upsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
upsub$line<-regcoef[1]+upsub$Time..months.*regcoef[2]
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point()+
geom_line(aes(x=Time..months., y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.5671963), linetype=3,col="darkgrey")+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Time..months., y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.5671963), linetype=3,col="darkgrey",size=1)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
upsub$line<-regcoef[1]+upsub$Time..months.*regcoef[2]
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Time..months., y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.5671963), linetype=3,col="darkgrey",size=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
upstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density upstreams.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
M1<-lme(lnR~1, method="REML",random=~1|DAM.CODE, data=upsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
upsub$line<-regcoef[1]+upsub$Time..months.*regcoef[2]
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point()+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.3672442), linetype=3, col="darkgrey")+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(upsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_hline(aes(yintercept=0), linetype=2,size=1)+
geom_hline(aes(yintercept=0.3672442), linetype=3, col="darkgrey",size=1)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
downstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$DISTANCE*regcoef[2]
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=DISTANCE, y=line), col="red", size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M1<-lme(lnR~Time..months.*Discharge..m3.s.+DISTANCE, method="REML",random=~1|DAM.CODE, data=reservoir)
summary(M1)
plot(M1)
#Plots:
#partial regression plots
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
dotchart(reservoir$Discharge..m3.s.)
## if I remove those two "outliers" and re-run the whole model:
ressub<-subset(reservoir, reservoir$Discharge..m3.s. <200)
# temporal corr signif?
model1<-lme(lnR~Time..months. +Catchment...undisturbed + Discharge..m3.s. , random=~1|DAM.CODE, data=ressub)
model2<-lme(lnR~Time..months. +Catchment...undisturbed + Discharge..m3.s. , random=~1|DAM.CODE, data=ressub, correlation=corExp(form=~Time..months.+DISTANCE+Initial.State))
anova(model1,model2) #nope
## NB: I included "initial state" in the correlation strc bc there are two points that were measured at the same
# distance and time, that's why R complained that there were zeros distances between points. What differentiate these
# points is the initial status, there were indeed points measured on both side of the lake.
# random factor significant?
model0<-gls(lnR~Time..months. +Catchment...undisturbed + Discharge..m3.s. ,method="REML", data=ressub)
model1<-lme(lnR~Time..months. +Catchment...undisturbed + Discharge..m3.s. , method="REML",random=~1|DAM.CODE, data=ressub)
anova(model1,model0) #yes
# covariates and distance and interactions: fixed structure (SD):
M0<-lme(lnR~Time..months.*Catchment...undisturbed +Time..months.*Discharge..m3.s. +
Time..months.*DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
M0<-lme(lnR~Time..months.*Discharge..m3.s. +
DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
M1<-lme(lnR~Time..months.+Discharge..m3.s. +
DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
anova(M0,M1)
M1<-lme(lnR~Time..months.*Discharge..m3.s.
, method="ML",random=~1|DAM.CODE, data=ressub)
anova(M0,M1)
# final
M0<-lme(lnR~Time..months.*Discharge..m3.s. +DISTANCE, method="REML",random=~1|DAM.CODE, data=ressub)
summary(M0)
plot(M0)
# plots:
# partial regression:
visreg2d(M0,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
visreg2d(M0,x="Time..months.",y="Discharge..m3.s.",plot.type="persp")
visreg(M0)
M0<-lme(lnR~Time..months.*Discharge..m3.s. +DISTANCE, method="REML",random=~1|DAM.CODE, data=ressub)
summary(M0)
ggplot(ressub, aes(x = DISTANCE, y = lnR)) +
geom_point( size = 4)
regcoef<-colMeans(coef(M0),)
ressub$line<-regcoef[1]+ressub$DISTANCE*regcoef[4]
plot1<-ggplot(ressub, aes(x = DISTANCE, y = lnR))+
geom_point()+
geom_line(aes(x=DISTANCE, y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("DISTANCE")+
ylab("Effect size for Tot Density (lnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months.*Discharge..m3.s. +DISTANCE,random=~1|DAM.CODE,data=ressub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[6]
DISTANCE<-L1$res[3]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months.*Discharge..m3.s. + DISTANCE,random=~1|DAM.CODE,data=ressub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[6]
DISTANCE<-L1$fit[3]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(ressub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.7468693), linetype=3, col="darkgrey")+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
# it works
M1<-lme(lnR~Time..months.*Discharge..m3.s. +DISTANCE,random=~1|DAM.CODE,data=ressub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[6]
DISTANCE<-L1$res[3]
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
M1<-lme(lnR~Time..months.*Discharge..m3.s. + DISTANCE,random=~1|DAM.CODE,data=ressub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[6]
DISTANCE<-L1$fit[3]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(ressub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.7468693), linetype=3, col="darkgrey")+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(ressub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2, size=2)+  ### or grey without transparency (remove alpha)
geom_point(size=2)+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=0.7468693), linetype=3, col="darkgrey",size=1)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=reservoir)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
reservoir$line<-regcoef[1]+reservoir$Time..months.*regcoef[2]
plot1<-ggplot(reservoir, aes(x = Time..months., y = lnR))+
geom_point()+
geom_line(aes(x=Time..months., y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=1.901455), linetype=3, col="darkgrey")+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(reservoir, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Time..months., y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=1.901455), linetype=3, col="darkgrey",size=1)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
# extract resid for one factor, and the other factor:
M0<-lme(lnR~Catchment...undisturbed + Time..months.*Discharge..m3.s., method="REML",random=~1|DAM.CODE,
correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
L1<-visreg(M0, "Catchment...undisturbed", type="contrast")
head(L1$res)
res_to_plot<-L1$res[6]
Catchment...undisturbed<-L1$res[1]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Catchment...undisturbed,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M0<-lme(lnR~Catchment...undisturbed + Time..months.*Discharge..m3.s., method="REML",random=~1|DAM.CODE,
correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
L1<-visreg(M0, "Catchment...undisturbed", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[6]
Catchment...undisturbed<-L1$fit[1]
data_line<-data.frame(cbind(Catchment...undisturbed,y_fitted_line))
plot1<-ggplot(ressub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Catchment...undisturbed, y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=1.097468), linetype=3, col="darkgrey")+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
#
plot1<-ggplot(ressub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2, size=2)+  ### or grey without transparency (remove alpha)
geom_point(size=2)+
geom_line(data=data_line, aes(x=Catchment...undisturbed, y=y_fitted_line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
geom_hline(aes(yintercept=1.097468), linetype=3, col="darkgrey",size=1)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
rm(list=ls())
downstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
#Linear regression on short distances
#Take out observations with a max distance of 3 km:
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,method="ML",data=downsub)
M1<-lme(lnR~Time..months.+Discharge..m3.s.,random=~1|DAM.CODE,method="ML",data=downsub)
M2<-lme(lnR~Time..months.,random=~1|DAM.CODE,method="ML",data=downsub)
anova(M1,M2)
M2<-lme(lnR~Discharge..m3.s.,random=~1|DAM.CODE,method="ML",data=downsub)
anova(M1,M2)
rm(list=ls())
downstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. +DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
summary(M1)
model0<-lme(lnR~Time..months. +DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
model1<-lme(lnR~Time..months. , method="ML",random=~1|DAM.CODE, data=downsub)
anova(model1,model0)
model0<-lme(lnR~Time..months. +DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
model1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
anova(model1,model0)
downstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
M0<-lme(lnR~DISTANCE  ,
method="ML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~1   ,
method="ML",random=~1|DAM.CODE, data=downsub)
anova(M0,M1)
upstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density upstream.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=upsub)
summary(M1)
M0<-lme(lnR~Time..months.+DISTANCE, method="ML",random=~1|DAM.CODE, data=upsub)
M1<-lme(lnR~Time..months., method="ML",random=~1|DAM.CODE, data=upsub)
anova(M0,M1)
M1<-lme(lnR~Time..months., method="ML",random=~1|DAM.CODE, data=upsub)
M0<-lme(lnR~1, method="ML",random=~1|DAM.CODE, data=upsub)
anova(M0,M1)
upstream <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density upstreams.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=upsub)
M0<-lme(lnR~1, method="ML",random=~1|DAM.CODE, data=upsub)
anova(M0,M1)
M1<-lme(lnR~Time..months., method="ML",random=~1|DAM.CODE, data=upsub)
M0<-lme(lnR~1, method="ML",random=~1|DAM.CODE, data=upsub)
anova(M0,M1)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
ressub<-subset(reservoir, reservoir$Discharge..m3.s. <200)
M0<-lme(lnR~Time..months.*Discharge..m3.s. +DISTANCE, method="REML",random=~1|DAM.CODE, data=ressub)
M0<-lme(lnR~Time..months.*Discharge..m3.s. +
DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
M1<-lme(lnR~Time..months.+Discharge..m3.s. +
DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
anova(M0,M1)
M0<-lme(lnR~Time..months.*Discharge..m3.s. +
DISTANCE, method="ML",random=~1|DAM.CODE, data=ressub)
M1<-lme(lnR~Time..months.*Discharge..m3.s.
, method="ML",random=~1|DAM.CODE, data=ressub)
anova(M0,M1)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M0<-lme(lnR~Time..months., method="ML",random=~1|DAM.CODE, data=reservoir)
M1<-lme(lnR~
1, method="ML",random=~1|DAM.CODE, data=reservoir)
anova(M1,M0)
reservoir <- read.table("/Users/serenadonadi/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
reservoir <- read.table("C:/Users/serena/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M0<-lme(lnR~Catchment...undisturbed + Time..months.*Discharge..m3.s.
, method="ML",random=~1|DAM.CODE,
correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
M1<-lme(lnR~ Time..months.*Discharge..m3.s.
, method="ML",random=~1|DAM.CODE, correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
anova(M0,M1)
M0<-lme(lnR~Catchment...undisturbed + Time..months.*Discharge..m3.s.
, method="ML",random=~1|DAM.CODE,
correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
M1<-lme(lnR~Catchment...undisturbed + Time..months.+Discharge..m3.s.
, method="ML",random=~1|DAM.CODE, correlation=corExp(form=~Time..months.+DISTANCE+Initial.State),data=reservoir)
anova(M0,M1)
rm(list=ls())
setwd("C:/Users/sedi0002/Google Drive/Dod ved/Electrofish data")
setwd("C:/Users/serena/Google Drive/Dod ved/Electrofish data")
my<-read.table("LWD_wholewidth_SD3.txt",header=T)
head(my)
str(my)
summary(my)
library(ggplot2)
library(lattice)
library(nlme)
library(MASS)
my$Catchment_number<-as.factor(my$Catchment_number)
my$Whole_width_fished<-as.factor(my$Whole_width_fished)
my$DateYYYYMMDD<-as.factor(my$DateYYYYMMDD)
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species
),list(my$River_name,my$Year,my$Catchment_number),mean)
names(AV)<-c("River_name", "Year", "Catchment_number",
"Altitude","Lat","Long","LWD","exaktarea","Wetted_width","Site_length","Site_area",
"Maxdepth","Av_depth","Water_temperature","Average_air_temperature","SUB1","Site_habitat_index",
"Velocity","Slope_percent","Distance_to_sea","Month","Julian_date","Abbor","BEcrOTOT","Elrit","GEdda",
"HarrTOT","Lake","LaxFIXTO","LaxOrtot","LaxTOT","Eel","MOrt","OringTOT","RegnbTOT","ROdinTOT","Cottus_spp",
"Lampetra","Sticklebacks","VIX","VIX_klass","Number_of_fish_species")
AV$GEdda_KLASS <- ifelse(AV$GEdda > 0, c(1), c(0))
head(AV)
str(AV)
AV$OringTOT_KLASS <- ifelse(AV$OringTOT > 0, c(1), c(0))
AV$LaxTOT_KLASS <- ifelse(AV$LaxTOT > 0, c(1), c(0))
pgd<-AV[,4:22]
# maybe need to convert categorical variables into dummy variables.  But are there any?
# No, the problem is caused by NAs:
summary(pgd)
# exclude all NAs fpor now:
d<-na.omit(pgd)
summary(d)
library(vegan)
d<-na.omit(pgd)
ord <- decorana(d)
d1<-d[,-Water_temperature]
d1<-d[,-d$Water_temperature]
d1<-d[,-(d$Water_temperature)]
d1<-d[,!d$Water_temperature<0]
d1<-d[!d$Water_temperature<0,]
summary(d1)
ord <- decorana(d1)
d2<-d1[!d1$Average_air_temperature<0,]
summary(d2)
ord <- decorana(d1)
ord <- decorana(d2)
ord
