Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
visreg(M1, "Time..months.", type="contrast")
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000 )
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
head(y_fitted_line)
head(L1$res)
res_to_plot<-L1$res[5]
head(res_to_plot)
Time..months.<-L1$res[1]
head(Time..months.)
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
View(data_res)
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
visreg(M1, "Time..months.", type="contrast")
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
Time..months.<-L1$res[1]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
DISTANCE<-L1$res[1]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[1]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
DISTANCE<-L1$res[2]
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[2]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
visreg(M1, "DISTANCE", type="contrast")
rm(list=ls())
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/%25EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
# mean effect size:
M1<-lme(lnR~DISTANCE, method="ML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$DISTANCE*regcoef[2]
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point()+
geom_line(aes(x=DISTANCE, y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size for EPT Density (lnR)")+
theme_bw()
print(plot1)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/EPT density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
DISTANCE<-L1$res[2]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(DISTANCE,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "DISTANCE", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
DISTANCE<-L1$fit[2]
data_line<-data.frame(cbind(DISTANCE,y_fitted_line))
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(downsub, aes(x = DISTANCE, y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=DISTANCE, y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Distance from dam (m)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
# it works
# to check:
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
visreg(M1, "DISTANCE", type="contrast")
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$res)
res_to_plot<-L1$res[5]
Time..months.<-L1$res[1]
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg (extract from L1$fit)
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + DISTANCE,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Density downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
#Linear regression on short distances
#Take out observations with a max distance of 3 km:
downsub<-subset(downstream, downstream$DISTANCE <3000 )
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Discharge..m3.s.", type="contrast")
L1$fit
y_fitted_line<-L1$fit[5]
y_fitted_line
L1$res
res_to_plot<-L1$res[5]
res_to_plot
Discharge..m3.s.<-L1$res[2]
Discharge..m3.s.
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Discharge..m3.s.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# method 2A) so try with regression line from partial coefficient as calculated before:
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,method="ML",data=downsub)
summary(M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Discharge..m3.s.*regcoef[3]
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(aes(x=Discharge..m3.s., y=line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
# no, it's still different form graphs given by visreg
#######FINAL GRAH:
##method 2B) if I plot the line from visreg
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Discharge..m3.s.", type="contrast")
L1$fitL1$fit
y_fitted_line<-L1$fit[5]
Discharge..m3.s.<-L1$fit[2]
data_line<-data.frame(cbind(Discharge..m3.s.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Discharge..m3.s., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Discharge..m3.s., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Discharge")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
L1$fit
y_fitted_line<-L1$fit[5]
head(y_fitted_line)
head(L1$res)
res_to_plot<-L1$res[5]
res_to_plot
Time..months.<-L1$res[1]
head(Time..months.)
# make a new dataframe where the background variable to plot (resid) will have the same
# name as the response variable in the main dataframe:
data_res<-data.frame(cbind(Time..months.,res_to_plot))
data_res$lnR<-data_res$visregRes
# plots response variable of the main dataframe and residuals from the new dataframe,
# and plot the line using fitted values from visreg
# I make another dataset for the line, as the vector returned by visreg has a differnt number of values
M1<-lme(lnR~Time..months. + Discharge..m3.s.,random=~1|DAM.CODE,data=downsub)
L1<-visreg(M1, "Time..months.", type="contrast")
head(L1$fit)
y_fitted_line<-L1$fit[5]
Time..months.<-L1$fit[1]
data_line<-data.frame(cbind(Time..months.,y_fitted_line))
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="blue")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(data=data_res, color="blue",alpha = .2)+  ### or grey without transparency (remove alpha)
geom_point()+
geom_line(data=data_line, aes(x=Time..months., y=y_fitted_line), col="red")+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw()
print(plot1)
library(nlme)
library(car)
library(mgcv)
library(ggplot2)
library(visreg)
rm(list=ls())
downstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/BI_fam downstream.txt" ,sep="\t",header=TRUE )
head(downstream)
summary(downstream)
downsub<-subset(downstream, downstream$DISTANCE <3000)
# mean effect size:
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
M0<-lme(lnR~Catchment...undisturbed , method="ML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~ 1, method="ML",random=~1|DAM.CODE, data=downsub)
anova(M0,M1)
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
library(ggplot2)
install.packages("ggplots")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
#final:
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
#
# plot for not significant effects of time:
## plots for the not significant effect of time (just for graphical purpouses):
plot1<-ggplot(downsub, aes(x = Time..months., y = lnR))+
geom_point(size=2)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Time since dam removal (months)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
regcoef<-colMeans(coef(M1),)
M1<-lme(lnR~Time..months., method="REML",random=~1|DAM.CODE, data=downsub)
M1<-lme(lnR~Catchment...undisturbed, method="REML",random=~1|DAM.CODE, data=downsub)
summary(M1)
plot(M1)
#Plots:
regcoef<-colMeans(coef(M1),)
downsub$line<-regcoef[1]+downsub$Catchment...undisturbed*regcoef[2]
plot1<-ggplot(downsub, aes(x = Catchment...undisturbed, y = lnR))+
geom_point(size=2)+
geom_line(aes(x=Catchment...undisturbed, y=line), col="red",size=1)+
geom_hline(aes(yintercept=0), linetype=2)+
xlab("Catchment area undisturbed (%)")+
ylab("Effect size (LnR)")+
theme_bw(base_size=17)
print(plot1)
rm(list=ls())
upstream <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam uppstreams.txt" ,sep="\t",header=TRUE )
head(upstream)
upsub<-subset(upstream, upstream$DISTANCE <3000)
reservoir <- read.table("/Users/serenadonadi/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam reservoir.txt" ,sep="\t",header=TRUE )
reservoir <- read.table("C:/Users/sedi0002/Google Drive/Ms in progress/Dam removal Peter/Analyses Claudia and Serena/Bi_fam reservoir.txt" ,sep="\t",header=TRUE )
head(reservoir)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
# partial regression:
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
visreg2d(M0,x="Time..months.",y="Discharge..m3.s.",plot.type="persp")
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="persp")
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="image")
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="persp")
visreg(M0)
visreg(M0, "Time..months.", by="Discharge..m3.s.")
visreg(M0, "Time..months.", by="Catchment...undisturbed")
visreg(M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
# partial regression:
visreg2d(M1,x="Time..months.",y="Discharge..m3.s.",plot.type="image")
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
M2<-lm(lnR~Time..months.*Catchment...undisturbed , data=reservoir)
anova(M2,M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
M2<-lm(lnR~Time..months.*Discharge..m3.s. , data=reservoir)
anova(M2,M1)
M1<-lm(lnR~Time..months.*Catchment...undisturbed + Time..months.*Discharge..m3.s., data=reservoir)
visreg2d(M1,x="Time..months.",y="Catchment...undisturbed",plot.type="image")
rm(list=ls())
setwd("C:/Users/sedi0002/Google Drive/Solab/Dod ved/Electrofish data")
setwd("C:/Users/serena/Google Drive/Solab/Dod ved/Electrofish data")
my<-read.table("LWD_wholewidth_SD7.txt",header=T)
head(my)
str(my)
summary(my)
library(ggplot2)
library(lattice)
library(nlme)
library(MASS)
library(piecewiseSEM)
library(lme4)
library(car)
library(visreg)
my_Migration_NAremoved<-my[!is.na(my$Typ_of_migration_numerical),]
AV<-aggregate(cbind(my$Altitude,my$ddlat,my$ddlong,my$LWD,my$exaktarea,my$Wetted_width,my$Site_length
,my$Site_area,my$Maxdepth,my$Av_depth,my$Water_temperature,my$Average_air_temperature
,my$SUB1,my$Site_habitat_index,my$Velocity,my$Slope_percent,my$Distance_to_sea,my$Month,my$Julian_date,my$Typ_of_migration_numerical
,my$Abbor,my$BEcrOTOT,my$Elrit,my$GEdda,my$HarrTOT,my$Lake,my$LaxFIXTO,my$LaxOrtot,my$LaxTOT,my$Eel,my$MOrt,my$OringTOT
,my$RegnbTOT,my$ROdinTOT,my$Cottus_spp,my$Lampetra,my$Sticklebacks,my$VIX,my$VIX_klass,my$Number_of_fish_species,
my$AreaForest, my$TotVol, my$MeanAge),list(my$River_name,my$Catchment_number,my$Year),mean)
names(AV)<-c("River_name", "Catchment_number","Year",
"Altitude","Lat","Long","LWD","exaktarea","Wetted_width","Site_length","Site_area",
"Maxdepth","Av_depth","Water_temperature","Average_air_temperature","SUB1","Site_habitat_index",
"Velocity","Slope_percent","Distance_to_sea","Month","Julian_date","Type_migration_continuous","Abbor","BEcrOTOT","Elrit","GEdda",
"HarrTOT","Lake","LaxFIXTO","LaxOrtot","LaxTOT","Eel","MOrt","OringTOT","RegnbTOT","ROdinTOT","Cottus_spp",
"Lampetra","Sticklebacks","VIX","VIX_klass","Number_of_fish_species","Forest_coverage","Forest_volume","Forest_age")
AV_Migration_NAremoved<-aggregate(cbind(my_Migration_NAremoved$Altitude,my_Migration_NAremoved$ddlat,my_Migration_NAremoved$ddlong,my_Migration_NAremoved$LWD,my_Migration_NAremoved$exaktarea,my_Migration_NAremoved$Wetted_width,my_Migration_NAremoved$Site_length
,my_Migration_NAremoved$Site_area,my_Migration_NAremoved$Maxdepth,my_Migration_NAremoved$Av_depth,my_Migration_NAremoved$Water_temperature,my_Migration_NAremoved$Average_air_temperature
,my_Migration_NAremoved$SUB1,my_Migration_NAremoved$Site_habitat_index,my_Migration_NAremoved$Velocity,my_Migration_NAremoved$Slope_percent,my_Migration_NAremoved$Distance_to_sea,my_Migration_NAremoved$Month,my_Migration_NAremoved$Julian_date,my_Migration_NAremoved$Typ_of_migration_numerical
,my_Migration_NAremoved$Abbor,my_Migration_NAremoved$BEcrOTOT,my_Migration_NAremoved$Elrit,my_Migration_NAremoved$GEdda,my_Migration_NAremoved$HarrTOT,my_Migration_NAremoved$Lake,my_Migration_NAremoved$LaxFIXTO,my_Migration_NAremoved$LaxOrtot,my_Migration_NAremoved$LaxTOT,my_Migration_NAremoved$Eel,my_Migration_NAremoved$MOrt,my_Migration_NAremoved$OringTOT
,my_Migration_NAremoved$RegnbTOT,my_Migration_NAremoved$ROdinTOT,my_Migration_NAremoved$Cottus_spp,my_Migration_NAremoved$Lampetra,my_Migration_NAremoved$Sticklebacks,my_Migration_NAremoved$VIX,my_Migration_NAremoved$VIX_klass,my_Migration_NAremoved$Number_of_fish_species,
my_Migration_NAremoved$AreaForest, my_Migration_NAremoved$TotVol, my_Migration_NAremoved$MeanAge),list(my_Migration_NAremoved$River_name,my_Migration_NAremoved$Catchment_number,my_Migration_NAremoved$Year),mean)
names(AV_Migration_NAremoved)<-c("River_name", "Catchment_number","Year",
"Altitude","Lat","Long","LWD","exaktarea","Wetted_width","Site_length","Site_area",
"Maxdepth","Av_depth","Water_temperature","Average_air_temperature","SUB1","Site_habitat_index",
"Velocity","Slope_percent","Distance_to_sea","Month","Julian_date","Type_migration_continuous","Abbor","BEcrOTOT","Elrit","GEdda",
"HarrTOT","Lake","LaxFIXTO","LaxOrtot","LaxTOT","Eel","MOrt","OringTOT","RegnbTOT","ROdinTOT","Cottus_spp",
"Lampetra","Sticklebacks","VIX","VIX_klass","Number_of_fish_species","Forest_coverage","Forest_volume","Forest_age")
str(AV)
summary(AV)
